ds_links_0 %>%
dplyr::group_by(uniqueid) %>%
dplyr::mutate(
count_links    = dplyr::n(),
count_sample   = sum(sample == 1L, na.rm = TRUE),
count_matching = sum(is.na(sample)),
) %>%
dplyr::ungroup()
table(ds_links_0$count_links, useNA="ifany")
table(ds_links_0$count_sample, useNA="ifany")
table(ds_links_0$count_matching, useNA="ifany")
table(ds_links_0$count_links   , useNA="ifany")
table(ds_links_0$count_sample  , useNA="ifany")
table(ds_links_0$count_matching, useNA="ifany")
source('~/GitHub/Utilities/link-king-names/analysis-names-links.R', echo=TRUE)
View(ds_links_0)
ds_links <-
ds_links_0 %>%
dplyr::filter(count_links == 2)
table(ds_links$count_matching)
table(ds_links$count_sample)
View(ds_links)
str(ds_links$client_identifier)
source('~/GitHub/Utilities/link-king-names/analysis-names-links.R', echo=TRUE)
ds_links <-
ds_links_0 %>%
dplyr::filter(count_links == 2) %>%
dplyr::group_by(uniqueid) %>%
dplyr::mutate(
score          = dplyr::lead(SCORE , 1),
method         = dplyr::lead(method, 1),
rown_o_sample  = dplyr::if_else(sample == 1L, client_identifier, NA_character_)
# rown_o_sample   = client_identifier,
# rown_o_matching = dplyr::lead(client_identifier)
) %>%
dplyr::ungroup()
table(ds_links_0$sample, useNA="ifany")
# ---- tweak-data ---------------------------------------------------------------
ds_links_0q <-
ds_links_0 %>%
dplyr::group_by(uniqueid) %>%
dplyr::mutate(
sample = dplyr::case_when(
is.na(sample) ~ 0L
sample == 1L  ~ 1L,
TRUE          ~ NA_integer_
),
# count_links    = dplyr::n(),
# count_sample   = sum(sample == 1L, na.rm = TRUE),
# count_matching = sum(is.na(sample)),
) %>%
dplyr::ungroup()
# This next line is run when the whole file is executed, but not when knitr calls individual chunks.
rm(list=ls(all=TRUE)) #Clear the memory for any variables set from any previous runs.
# ---- load-sources ------------------------------------------------------------
# ---- load-packages -----------------------------------------------------------
library(magrittr                , quietly=TRUE)
library(stringr                               )
library(wakefield                             )
requireNamespace("dplyr"                      )
requireNamespace("lubridate"                  )
requireNamespace("forcats"                    )
# ---- declare-globals ---------------------------------------------------------
# readr::spec_csv(path_in_links)
path_in_links    <- "./data-unshared/names-for-link-king/linking-output/final_link_master.csv"
path_in_matching <- "./data-unshared/names-for-link-king/ds_matching.csv"
path_in_sample   <- "./data-unshared/names-for-link-king/ds_sample.csv"
col_types_links = readr::cols_only(
certainty                       = readr::col_character(),
uniqueid                        = readr::col_integer(),
client_identifier               = readr::col_character(),
sample                          = readr::col_integer(),
client_first_name               = readr::col_character(),
client_last_name                = readr::col_character(),
client_middle_name              = readr::col_character(),
client_alternate_last_name      = readr::col_character(),
client_race                     = readr::col_character(),
client_social_security_number   = readr::col_character(),
client_birthdate                = readr::col_character(),
client_gender                   = readr::col_character(),
flex                            = readr::col_character(),
RECNUM                          = readr::col_integer(),
fn_ln_pct                       = readr::col_double(),
# TEMP_ID                         = readr::col_character(),
# client_origin                   = readr::col_double(),
# client_core                     = readr::col_character(),
# summary_d                       = readr::col_character(),
MATCHED                         = readr::col_character(),
SCORE                           = readr::col_double(),
# manually_verified               = readr::col_logical(),
method                          = readr::col_character()#,
# regroup                         = readr::col_logical(),
# pending_edits                   = readr::col_double(),
# decision                        = readr::col_logical(),
# display_option                  = readr::col_double(),
# client_grp_ok                   = readr::col_logical(),
# quick_group2                    = readr::col_double(),
# quick_group3                    = readr::col_double(),
# quick_group4                    = readr::col_double(),
# quick_group5                    = readr::col_double(),
# quick_group6                    = readr::col_logical(),
# found                           = readr::col_logical(),
# alias_strength                  = readr::col_logical(),
# collision_case                  = readr::col_logical(),
# weak_alias_sort1                = readr::col_double(),
# weak_alias_sort2                = readr::col_double(),
# xlink_num                       = readr::col_logical(),
# xlink_case                      = readr::col_logical(),
# user_grouped                    = readr::col_logical(),
# min_cert                        = readr::col_double(),
# max_cert                        = readr::col_double(),
# quick_sort                      = readr::col_double(),
# first_unique                    = readr::col_double(),
# first                           = readr::col_double(),
# regroup_n                       = readr::col_double(),
# initial_core                    = readr::col_double(),
# sortindex1                      = readr::col_double(),
# sortindex2                      = readr::col_double(),
# sortindex3                      = readr::col_double(),
# sortindex4                      = readr::col_double(),
# sortindex5                      = readr::col_double(),
# sortindex6                      = readr::col_double(),
# sortindex7                      = readr::col_double(),
# sortindex8                      = readr::col_double(),
# sortindex9                      = readr::col_double(),
# sortindex10                     = readr::col_double(),
# non_core_n                      = readr::col_double(),
# core_n                          = readr::col_double(),
# mapped_recnum                   = readr::col_double(),
# first_collision                 = readr::col_double()
)
# ---- load-data ---------------------------------------------------------------
ds_links_0    <- readr::read_csv(path_in_links    , col_types=col_types_links )
ds_matching_0 <- readr::read_csv(path_in_matching                             )
ds_sample_0   <- readr::read_csv(path_in_sample                               )
# ---- tweak-data ---------------------------------------------------------------
ds_links_0q <-
ds_links_0 %>%
dplyr::group_by(uniqueid) %>%
dplyr::mutate(
sample = dplyr::case_when(
is.na(sample) ~ 0L
sample == 1L  ~ 1L,
TRUE          ~ NA_integer_
),
# count_links    = dplyr::n(),
# count_sample   = sum(sample == 1L, na.rm = TRUE),
# count_matching = sum(is.na(sample)),
) %>%
dplyr::ungroup()
# ---- tweak-data ---------------------------------------------------------------
ds_links_0q <-
ds_links_0 %>%
dplyr::group_by(uniqueid) %>%
dplyr::mutate(
sample = dplyr::case_when(
is.na(sample) ~ 0L,
sample == 1L  ~ 1L,
TRUE          ~ NA_integer_
),
# count_links    = dplyr::n(),
# count_sample   = sum(sample == 1L, na.rm = TRUE),
# count_matching = sum(is.na(sample)),
) %>%
dplyr::ungroup()
# ---- tweak-data ---------------------------------------------------------------
ds_links_0q <-
ds_links_0 %>%
dplyr::group_by(uniqueid) %>%
dplyr::mutate(
sampleq = dplyr::case_when(
is.na(sample) ~ 0L,
sample == 1L  ~ 1L,
TRUE          ~ NA_integer_
),
# count_links    = dplyr::n(),
# count_sample   = sum(sample == 1L, na.rm = TRUE),
# count_matching = sum(is.na(sample)),
) %>%
dplyr::ungroup()
table(ds_links_0q$sample, ds_links_0q$sampleq, useNA="ifany")
table(first=ds_links_0q$sample, new = ds_links_0q$sampleq, useNA="ifany")
# ---- tweak-data ---------------------------------------------------------------
ds_links_0 <-
ds_links_0 %>%
dplyr::group_by(uniqueid) %>%
dplyr::mutate(
sample = dplyr::case_when(
is.na(sample) ~ 0L,
sample == 1L  ~ 1L,
TRUE          ~ NA_integer_
),
count_links    = dplyr::n(),
count_sample   = sum(sample == 1L, na.rm = TRUE),
count_matching = sum(sample == 0L, na.rm = TRUE),
) %>%
dplyr::ungroup()
source('~/GitHub/Utilities/link-king-names/analysis-names-links.R', echo=TRUE)
ds_links <-
ds_links_0 %>%
dplyr::filter(count_links == 2) %>%
dplyr::group_by(uniqueid) %>%
dplyr::mutate(
score          = dplyr::lead(SCORE , 1),
method         = dplyr::lead(method, 1),
rown_o_sample   = dplyr::if_else(sample == 1L, client_identifier, NA_character_),
rown_o_matching = dplyr::if_else(sample == 0L, client_identifier, NA_character_),
# link_correct    = rown
) %>%
dplyr::ungroup()
View(ds_links)
ds_links <-
ds_links_0 %>%
dplyr::filter(count_links == 2) %>%
dplyr::group_by(uniqueid) %>%
dplyr::mutate(
score          = dplyr::lead(SCORE , 1),
method         = dplyr::lead(method, 1),
rown_o_sample   = dplyr::if_else(sample == 1L, client_identifier, NA_character_),
rown_o_matching = dplyr::if_else(sample == 0L, client_identifier, NA_character_),
# link_correct    = rown
) %>%
dplyr::ungroup()
View(ds_links)
ds_links <-
ds_links_0 %>%
dplyr::filter(count_links == 2) %>%
dplyr::group_by(uniqueid) %>%
dplyr::mutate(
score          = OuhscMunge::first_nonmissing(SCORE , 1),
method         = OuhscMunge::first_nonmissing(method, 1),
rown_o_sample   = dplyr::if_else(sample == 1L, client_identifier, NA_character_),
rown_o_matching = dplyr::if_else(sample == 0L, client_identifier, NA_character_),
# link_correct    = rown
) %>%
dplyr::ungroup()
ds_links <-
ds_links_0 %>%
dplyr::filter(count_links == 2) %>%
dplyr::group_by(uniqueid) %>%
dplyr::mutate(
score          = OuhscMunge::first_nonmissing(SCORE  ),
method         = OuhscMunge::first_nonmissing(method ),
rown_o_sample   = dplyr::if_else(sample == 1L, client_identifier, NA_character_),
rown_o_matching = dplyr::if_else(sample == 0L, client_identifier, NA_character_),
# link_correct    = rown
) %>%
dplyr::ungroup()
View(ds_links)
table(nchar(ds_links$client_identifier))
ds_links <-
ds_links_0 %>%
dplyr::filter(count_links == 2) %>%
dplyr::group_by(uniqueid) %>%
dplyr::mutate(
score          = OuhscMunge::first_nonmissing(SCORE  ),
method         = OuhscMunge::first_nonmissing(method ),
rown_o_sample   = dplyr::if_else(sample == 1L, client_identifier, NA_character_),
rown_o_matching = dplyr::if_else(sample == 0L, client_identifier, NA_character_),
link_correct1    = subtr(rown_o_sample, start = 2, stop = 6),
link_correct2    = dplyr::lead(rown_o_matching, 1),
) %>%
dplyr::ungroup()
ds_links <-
ds_links_0 %>%
dplyr::filter(count_links == 2) %>%
dplyr::group_by(uniqueid) %>%
dplyr::mutate(
score          = OuhscMunge::first_nonmissing(SCORE  ),
method         = OuhscMunge::first_nonmissing(method ),
rown_o_sample   = dplyr::if_else(sample == 1L, client_identifier, NA_character_),
rown_o_matching = dplyr::if_else(sample == 0L, client_identifier, NA_character_),
link_correct1    = substr(rown_o_sample, start = 2, stop = 6),
link_correct2    = dplyr::lead(rown_o_matching, 1),
) %>%
dplyr::ungroup()
View(ds_links)
ds_links <-
ds_links_0 %>%
dplyr::filter(count_links == 2) %>%
dplyr::group_by(uniqueid) %>%
dplyr::mutate(
score          = OuhscMunge::first_nonmissing(SCORE  ),
method         = OuhscMunge::first_nonmissing(method ),
rown_o_sample   = dplyr::if_else(sample == 1L, client_identifier, NA_character_),
rown_o_matching = dplyr::if_else(sample == 0L, client_identifier, NA_character_),
# link_correct1    = substr(rown_o_sample, start = 2, stop = 6),
# link_correct2    = dplyr::lead(rown_o_matching, 1),
link_correct     = substr(rown_o_sample, start = 2, stop = 6) == dplyr::lead(rown_o_matching, 1)
) %>%
dplyr::ungroup()
View(ds_links)
table(ds_links$link_correct, useNA="ifany")
ds_links <-
ds_links_0 %>%
dplyr::filter(count_links == 2) %>%
dplyr::group_by(uniqueid) %>%
dplyr::mutate(
score          = OuhscMunge::first_nonmissing(SCORE  ),
method         = OuhscMunge::first_nonmissing(method ),
rown_o_sample   = dplyr::if_else(sample == 1L, client_identifier, NA_character_),
rown_o_matching = dplyr::if_else(sample == 0L, client_identifier, NA_character_),
# link_correct1    = substr(rown_o_sample, start = 2, stop = 6),
# link_correct2    = dplyr::lead(rown_o_matching, 1),
link_correct     = substr(rown_o_sample, start = 2, stop = 6) == dplyr::lead(rown_o_matching, 1)
) %>%
dplyr::ungroup() %>%
dplyr::filter(link_correct)
View(ds_links)
ds_links <-
ds_links_0 %>%
dplyr::filter(count_links == 2) %>%
dplyr::group_by(uniqueid) %>%
dplyr::mutate(
score            = OuhscMunge::first_nonmissing(SCORE  ),
method           = OuhscMunge::first_nonmissing(method ),
rown_o_sample    = dplyr::if_else(sample == 1L, client_identifier, NA_character_),
rown_o_matching  = dplyr::if_else(sample == 0L, client_identifier, NA_character_),
rown_o_sample    = OuhscMunge::first_nonmissing(rown_o_sample   ),
rown_o_matching  = OuhscMunge::first_nonmissing(rown_o_matching ),
# link_correct1    = substr(rown_o_sample, start = 2, stop = 6),
# link_correct2    = dplyr::lead(rown_o_matching, 1),
link_correct     = substr(rown_o_sample, start = 2, stop = 6) == dplyr::lead(rown_o_matching, 1)
) %>%
dplyr::ungroup() %>%
dplyr::filter(link_correct)
View(ds_links)
ds_links <-
ds_links_0 %>%
dplyr::filter(count_links == 2) %>%
dplyr::group_by(uniqueid) %>%
dplyr::mutate(
score            = OuhscMunge::first_nonmissing(SCORE  ),
method           = OuhscMunge::first_nonmissing(method ),
rown_o_sample    = dplyr::if_else(sample == 1L, client_identifier, NA_character_),
rown_o_matching  = dplyr::if_else(sample == 0L, client_identifier, NA_character_),
rown_o_sample    = OuhscMunge::first_nonmissing(rown_o_sample   ),
rown_o_matching  = OuhscMunge::first_nonmissing(rown_o_matching ),
# link_correct1    = substr(rown_o_sample, start = 2, stop = 6),
# link_correct2    = dplyr::lead(rown_o_matching, 1),
link_correct     = substr(rown_o_sample, start = 2, stop = 6) == dplyr::lead(rown_o_matching, 1)
) %>%
dplyr::ungroup()
View(ds_links)
ds_links <-
ds_links_0 %>%
dplyr::filter(count_links == 2) %>%
dplyr::group_by(uniqueid) %>%
dplyr::mutate(
score            = OuhscMunge::first_nonmissing(SCORE  ),
method           = OuhscMunge::first_nonmissing(method ),
rown_o_sample    = dplyr::if_else(sample == 1L, client_identifier, NA_character_),
rown_o_matching  = dplyr::if_else(sample == 0L, client_identifier, NA_character_),
# rown_o_sample    = OuhscMunge::first_nonmissing(rown_o_sample   ),
# rown_o_matching  = OuhscMunge::first_nonmissing(rown_o_matching ),
# link_correct1    = substr(rown_o_sample, start = 2, stop = 6),
# link_correct2    = dplyr::lead(rown_o_matching, 1),
link_correct     = substr(rown_o_sample, start = 2, stop = 6) == dplyr::lead(rown_o_matching, 1)
) %>%
dplyr::ungroup() %>%
dplyr::filter(link_correct)
View(ds_links)
ds_links <-
ds_links_0 %>%
dplyr::filter(count_links == 2) %>%
dplyr::group_by(uniqueid) %>%
dplyr::mutate(
score            = OuhscMunge::first_nonmissing(SCORE  ),
method           = OuhscMunge::first_nonmissing(method ),
rown_o_sample    = dplyr::if_else(sample == 1L, client_identifier, NA_character_),
rown_o_matching  = dplyr::if_else(sample == 0L, client_identifier, NA_character_),
# rown_o_sample    = OuhscMunge::first_nonmissing(rown_o_sample   ),
# rown_o_matching  = OuhscMunge::first_nonmissing(rown_o_matching ),
# link_correct1    = substr(rown_o_sample, start = 2, stop = 6),
# link_correct2    = dplyr::lead(rown_o_matching, 1),
link_correct     = substr(rown_o_sample, start = 2, stop = 6) == dplyr::lead(rown_o_matching, 1)
) %>%
dplyr::ungroup() %>%
dplyr::filter(link_correct) %>%
dplyr::mutate(
rown_o_matching = substr(rown_o_sample, start = 2, stop = 6),
)
View(ds_links)
source('~/GitHub/Utilities/link-king-names/analysis-names-links.R', echo=TRUE)
View(ds_links)
View(ds_links_0)
table(ds_links_0$SCORE, useNA="ifany")
table(ds_links_0$method, useNA="ifany")
View(ds_links_0)
ds_links <-
ds_links_0 %>%
dplyr::filter(count_links == 2) %>%
dplyr::group_by(uniqueid) %>%
dplyr::mutate(
matched          = OuhscMunge::first_nonmissing(MATCHED  ),
score            = OuhscMunge::first_nonmissing(SCORE    ),
method           = OuhscMunge::first_nonmissing(method   ),
rown_o_sample    = dplyr::if_else(sample == 1L, client_identifier, NA_character_),
rown_o_matching  = dplyr::if_else(sample == 0L, client_identifier, NA_character_),
# rown_o_sample    = OuhscMunge::first_nonmissing(rown_o_sample   ),
# rown_o_matching  = OuhscMunge::first_nonmissing(rown_o_matching ),
# link_correct1    = substr(rown_o_sample, start = 2, stop = 6),
# link_correct2    = dplyr::lead(rown_o_matching, 1),
link_correct     = substr(rown_o_sample, start = 2, stop = 6) == dplyr::lead(rown_o_matching, 1)
) %>%
dplyr::ungroup() %>%
dplyr::filter(link_correct) %>%
dplyr::mutate(
rown_o_matching = substr(rown_o_sample, start = 2, stop = 6),
)
View(ds_links)
table(ds_links$link_correct, useNA="ifany")
6550 - (2*2550)
ds_links <-
ds_links_0 %>%
dplyr::filter(count_links == 2) %>%
dplyr::group_by(uniqueid) %>%
dplyr::mutate(
matched          = OuhscMunge::first_nonmissing(MATCHED  ),
score            = OuhscMunge::first_nonmissing(SCORE    ),
method           = OuhscMunge::first_nonmissing(method   ),
rown_o_sample    = dplyr::if_else(sample == 1L, client_identifier, NA_character_),
rown_o_matching  = dplyr::if_else(sample == 0L, client_identifier, NA_character_),
# rown_o_sample    = OuhscMunge::first_nonmissing(rown_o_sample   ),
# rown_o_matching  = OuhscMunge::first_nonmissing(rown_o_matching ),
# link_correct1    = substr(rown_o_sample, start = 2, stop = 6),
# link_correct2    = dplyr::lead(rown_o_matching, 1),
link_correct     = substr(rown_o_sample, start = 2, stop = 6) == dplyr::lead(rown_o_matching, 1)
) %>%
dplyr::ungroup() %>%
dplyr::filter(link_correct) %>%
dplyr::mutate(
rown_o_matching = substr(rown_o_sample, start = 2, stop = 6),
)
table(ds_links_0$certainty)
table(ds_links_0$certainty, useNA="ifany")
ds_links <-
ds_links_0 %>%
dplyr::filter(count_links == 2) %>%
dplyr::group_by(uniqueid) %>%
dplyr::mutate(
matched          = OuhscMunge::first_nonmissing(MATCHED  ),
score            = OuhscMunge::first_nonmissing(SCORE    ),
method           = OuhscMunge::first_nonmissing(method   ),
rown_o_sample    = dplyr::if_else(sample == 1L, client_identifier, NA_character_),
rown_o_matching  = dplyr::if_else(sample == 0L, client_identifier, NA_character_),
# rown_o_sample    = OuhscMunge::first_nonmissing(rown_o_sample   ),
# rown_o_matching  = OuhscMunge::first_nonmissing(rown_o_matching ),
# link_correct1    = substr(rown_o_sample, start = 2, stop = 6),
# link_correct2    = dplyr::lead(rown_o_matching, 1),
link_correct     = substr(rown_o_sample, start = 2, stop = 6) == dplyr::lead(rown_o_matching, 1),
uncertainty_int = certainty,
uncertainty_int = dplyr::case_when(
is.na(uncertainty_int)         ~ NA_integer_,
uncertainty_int == "Reference" ~ NA_integer_,
uncertainty_int == "Level 1"   ~ 1L,
uncertainty_int == "Level 2"   ~ 2L,
uncertainty_int == "Level 3"   ~ 3L,
uncertainty_int == "Level 4"   ~ 4L,
uncertainty_int == "Level 6"   ~ 6L,
uncertainty_int == "Level 7"   ~ 7L
),
uncertainty_int = OuhscMunge::first_nonmissing(uncertainty_int)
) %>%
dplyr::ungroup() %>%
dplyr::filter(link_correct) %>%
dplyr::mutate(
rown_o_matching = substr(rown_o_sample, start = 2, stop = 6),
)
View(ds_links)
dput(colnames(ds_links))
ds_links <-
ds_links_0 %>%
dplyr::filter(count_links == 2) %>%
dplyr::group_by(uniqueid) %>%
dplyr::mutate(
matched          = OuhscMunge::first_nonmissing(MATCHED  ),
score            = OuhscMunge::first_nonmissing(SCORE    ),
method           = OuhscMunge::first_nonmissing(method   ),
rown_o_sample    = dplyr::if_else(sample == 1L, client_identifier, NA_character_),
rown_o_matching  = dplyr::if_else(sample == 0L, client_identifier, NA_character_),
# rown_o_sample    = OuhscMunge::first_nonmissing(rown_o_sample   ),
# rown_o_matching  = OuhscMunge::first_nonmissing(rown_o_matching ),
# link_correct1    = substr(rown_o_sample, start = 2, stop = 6),
# link_correct2    = dplyr::lead(rown_o_matching, 1),
link_correct     = substr(rown_o_sample, start = 2, stop = 6) == dplyr::lead(rown_o_matching, 1),
uncertainty_int = certainty,
uncertainty_int = dplyr::case_when(
is.na(uncertainty_int)         ~ NA_integer_,
uncertainty_int == "Reference" ~ NA_integer_,
uncertainty_int == "Level 1"   ~ 1L,
uncertainty_int == "Level 2"   ~ 2L,
uncertainty_int == "Level 3"   ~ 3L,
uncertainty_int == "Level 4"   ~ 4L,
uncertainty_int == "Level 6"   ~ 6L,
uncertainty_int == "Level 7"   ~ 7L
),
uncertainty_int = OuhscMunge::first_nonmissing(uncertainty_int)
) %>%
dplyr::ungroup() %>%
dplyr::filter(link_correct) %>%
dplyr::mutate(
rown_o_matching = substr(rown_o_sample, start = 2, stop = 6),
) %>%
dplyr::select(
client_identifier,
rown_o_sample,
rown_o_matching,
link_correct,
uncertainty_int
)
View(ds_links)
