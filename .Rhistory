dplyr::mutate(
rown_o = 1:dplyr::n(),
) %>%
dplyr::filter(rown_o <= 100 ) %>%
dplyr::filter(!is.na(birth_year)) %>%
dplyr::group_by(rown_o) %>%
dplyr::mutate(
count_name_segments = length(strsplit(primary_name, " ")[[1]]),
name_first          =        strsplit(primary_name, " ")[[1]][1],
name_last           =        strsplit(primary_name, " ")[[1]][2],
) %>%
dplyr::ungroup() %>%
dplyr::filter(count_name_segments <= 2) %>%
dplyr::mutate(
name_middle = dplyr::lag(name_first, 1),
name_middle = dplyr::if_else(!is.na(name_middle), name_middle, dplyr::lead(name_first, 1)),
name_maiden = dplyr::lead(name_last, 1),
name_maiden = dplyr::if_else(!is.na(name_maiden), name_maiden, dplyr::lag(name_last, 1)),
gender      = sample(0:1, dplyr::n(), replace = TRUE),
gender      = dplyr::if_else(gender == 1, "Male", "Female"),
ethnicity   = sample(1:5, dplyr::n(), replace = TRUE),
ethnicity   = dplyr::case_when(
ethnicity == 1 ~ "Asian",
ethnicity == 2 ~ "African American",
ethnicity == 3 ~ "Caucasian",
ethnicity == 4 ~ "Hispanic",
ethnicity == 5 ~ "Native American",
),
birth_day   = sample(1:28, dplyr::n(), replace = TRUE),
birth_month = sample(1:12, dplyr::n(), replace = TRUE),
dob         = paste(birth_year, birth_month, birth_day, sep = "-"),
) %>%
fake_ssn_with_repeats_function() %>%
dplyr::distinct(ssn_fake, .keep_all = TRUE) %>%
# dplyr::select(
#   "rown_o",
#   "name_first",
#   "name_last",
#   "name_middle",
#   "name_maiden",
#   "gender",
#   "ethnicity",
#   "dob",
#   "ssn_fake"
# ) %>%
dplyr::mutate(
rown_o          = as.character(rown_o),
rown_o_w        = paste0("w",rown_o),
name_first_w    = name_first,
name_last_w     = name_last,
name_middle_w   = name_middle,
name_maiden_w   = name_maiden,
gender_w        = gender,
ethnicity_w     = ethnicity,
dob_w           = dob,
ssn_fake_w      = ssn_fake,
name_middle_missing = rbinorm(n = dplyr::n(), size = 1, prob = 0.15)
)
dsq2 <-
ds_names_raw %>%
dplyr::mutate(
rown_o = 1:dplyr::n(),
) %>%
dplyr::filter(rown_o <= 100 ) %>%
dplyr::filter(!is.na(birth_year)) %>%
dplyr::group_by(rown_o) %>%
dplyr::mutate(
count_name_segments = length(strsplit(primary_name, " ")[[1]]),
name_first          =        strsplit(primary_name, " ")[[1]][1],
name_last           =        strsplit(primary_name, " ")[[1]][2],
) %>%
dplyr::ungroup() %>%
dplyr::filter(count_name_segments <= 2) %>%
dplyr::mutate(
name_middle = dplyr::lag(name_first, 1),
name_middle = dplyr::if_else(!is.na(name_middle), name_middle, dplyr::lead(name_first, 1)),
name_maiden = dplyr::lead(name_last, 1),
name_maiden = dplyr::if_else(!is.na(name_maiden), name_maiden, dplyr::lag(name_last, 1)),
gender      = sample(0:1, dplyr::n(), replace = TRUE),
gender      = dplyr::if_else(gender == 1, "Male", "Female"),
ethnicity   = sample(1:5, dplyr::n(), replace = TRUE),
ethnicity   = dplyr::case_when(
ethnicity == 1 ~ "Asian",
ethnicity == 2 ~ "African American",
ethnicity == 3 ~ "Caucasian",
ethnicity == 4 ~ "Hispanic",
ethnicity == 5 ~ "Native American",
),
birth_day   = sample(1:28, dplyr::n(), replace = TRUE),
birth_month = sample(1:12, dplyr::n(), replace = TRUE),
dob         = paste(birth_year, birth_month, birth_day, sep = "-"),
) %>%
fake_ssn_with_repeats_function() %>%
dplyr::distinct(ssn_fake, .keep_all = TRUE) %>%
# dplyr::select(
#   "rown_o",
#   "name_first",
#   "name_last",
#   "name_middle",
#   "name_maiden",
#   "gender",
#   "ethnicity",
#   "dob",
#   "ssn_fake"
# ) %>%
dplyr::mutate(
rown_o          = as.character(rown_o),
rown_o_w        = paste0("w",rown_o),
name_first_w    = name_first,
name_last_w     = name_last,
name_middle_w   = name_middle,
name_maiden_w   = name_maiden,
gender_w        = gender,
ethnicity_w     = ethnicity,
dob_w           = dob,
ssn_fake_w      = ssn_fake,
name_middle_missing = rbinom(n = dplyr::n(), size = 1, prob = 0.15)
)
View(dsq2)
install.packages("wakefield")
library(wakefield)
dsq2 <-
ds_names_raw %>%
dplyr::mutate(
rown_o = 1:dplyr::n(),
) %>%
dplyr::filter(rown_o <= 100 ) %>%
dplyr::filter(!is.na(birth_year)) %>%
dplyr::group_by(rown_o) %>%
dplyr::mutate(
count_name_segments = length(strsplit(primary_name, " ")[[1]]),
name_first          =        strsplit(primary_name, " ")[[1]][1],
name_last           =        strsplit(primary_name, " ")[[1]][2],
) %>%
dplyr::ungroup() %>%
dplyr::filter(count_name_segments <= 2) %>%
dplyr::mutate(
name_middle = dplyr::lag(name_first, 1),
name_middle = dplyr::if_else(!is.na(name_middle), name_middle, dplyr::lead(name_first, 1)),
name_maiden = dplyr::lead(name_last, 1),
name_maiden = dplyr::if_else(!is.na(name_maiden), name_maiden, dplyr::lag(name_last, 1)),
gender      = sample(0:1, dplyr::n(), replace = TRUE),
gender      = dplyr::if_else(gender == 1, "Male", "Female"),
ethnicity   = sample(1:5, dplyr::n(), replace = TRUE),
ethnicity   = dplyr::case_when(
ethnicity == 1 ~ "Asian",
ethnicity == 2 ~ "African American",
ethnicity == 3 ~ "Caucasian",
ethnicity == 4 ~ "Hispanic",
ethnicity == 5 ~ "Native American",
),
birth_day   = sample(1:28, dplyr::n(), replace = TRUE),
birth_month = sample(1:12, dplyr::n(), replace = TRUE),
dob         = paste(birth_year, birth_month, birth_day, sep = "-"),
zip_code    = zip_code(n = 1, k = dplyr::n())
)
View(dsq2)
dsq2 <-
ds_names_raw %>%
dplyr::mutate(
rown_o = 1:dplyr::n(),
) %>%
dplyr::filter(rown_o <= 100 ) %>%
dplyr::filter(!is.na(birth_year)) %>%
dplyr::group_by(rown_o) %>%
dplyr::mutate(
count_name_segments = length(strsplit(primary_name, " ")[[1]]),
name_first          =        strsplit(primary_name, " ")[[1]][1],
name_last           =        strsplit(primary_name, " ")[[1]][2],
) %>%
dplyr::ungroup() %>%
dplyr::filter(count_name_segments <= 2) %>%
dplyr::mutate(
name_middle = dplyr::lag(name_first, 1),
name_middle = dplyr::if_else(!is.na(name_middle), name_middle, dplyr::lead(name_first, 1)),
name_maiden = dplyr::lead(name_last, 1),
name_maiden = dplyr::if_else(!is.na(name_maiden), name_maiden, dplyr::lag(name_last, 1)),
gender      = sample(0:1, dplyr::n(), replace = TRUE),
gender      = dplyr::if_else(gender == 1, "Male", "Female"),
ethnicity   = sample(1:5, dplyr::n(), replace = TRUE),
ethnicity   = dplyr::case_when(
ethnicity == 1 ~ "Asian",
ethnicity == 2 ~ "African American",
ethnicity == 3 ~ "Caucasian",
ethnicity == 4 ~ "Hispanic",
ethnicity == 5 ~ "Native American",
),
birth_day   = sample(1:28, dplyr::n(), replace = TRUE),
birth_month = sample(1:12, dplyr::n(), replace = TRUE),
dob         = paste(birth_year, birth_month, birth_day, sep = "-"),
zip_code    = zip_code(n = dplyr::n(), k = dplyr::n())
)
View(dsq2)
dsq2 <-
ds_names_raw %>%
dplyr::mutate(
rown_o = 1:dplyr::n(),
) %>%
dplyr::filter(rown_o <= 100 ) %>%
dplyr::filter(!is.na(birth_year)) %>%
dplyr::group_by(rown_o) %>%
dplyr::mutate(
count_name_segments = length(strsplit(primary_name, " ")[[1]]),
name_first          =        strsplit(primary_name, " ")[[1]][1],
name_last           =        strsplit(primary_name, " ")[[1]][2],
) %>%
dplyr::ungroup() %>%
dplyr::filter(count_name_segments <= 2) %>%
dplyr::mutate(
name_middle = dplyr::lag(name_first, 1),
name_middle = dplyr::if_else(!is.na(name_middle), name_middle, dplyr::lead(name_first, 1)),
name_maiden = dplyr::lead(name_last, 1),
name_maiden = dplyr::if_else(!is.na(name_maiden), name_maiden, dplyr::lag(name_last, 1)),
gender      = sample(0:1, dplyr::n(), replace = TRUE),
gender      = dplyr::if_else(gender == 1, "Male", "Female"),
ethnicity   = sample(1:5, dplyr::n(), replace = TRUE),
ethnicity   = dplyr::case_when(
ethnicity == 1 ~ "Asian",
ethnicity == 2 ~ "African American",
ethnicity == 3 ~ "Caucasian",
ethnicity == 4 ~ "Hispanic",
ethnicity == 5 ~ "Native American",
),
birth_day   = sample(1:28, dplyr::n(), replace = TRUE),
birth_month = sample(1:12, dplyr::n(), replace = TRUE),
dob         = as.Date(paste(birth_year, birth_month, birth_day, sep = "-"))
zip_code    = zip_code(n = dplyr::n(), k = dplyr::n())
)
dsq2 <-
ds_names_raw %>%
dplyr::mutate(
rown_o = 1:dplyr::n(),
) %>%
dplyr::filter(rown_o <= 100 ) %>%
dplyr::filter(!is.na(birth_year)) %>%
dplyr::group_by(rown_o) %>%
dplyr::mutate(
count_name_segments = length(strsplit(primary_name, " ")[[1]]),
name_first          =        strsplit(primary_name, " ")[[1]][1],
name_last           =        strsplit(primary_name, " ")[[1]][2],
) %>%
dplyr::ungroup() %>%
dplyr::filter(count_name_segments <= 2) %>%
dplyr::mutate(
name_middle = dplyr::lag(name_first, 1),
name_middle = dplyr::if_else(!is.na(name_middle), name_middle, dplyr::lead(name_first, 1)),
name_maiden = dplyr::lead(name_last, 1),
name_maiden = dplyr::if_else(!is.na(name_maiden), name_maiden, dplyr::lag(name_last, 1)),
gender      = sample(0:1, dplyr::n(), replace = TRUE),
gender      = dplyr::if_else(gender == 1, "Male", "Female"),
ethnicity   = sample(1:5, dplyr::n(), replace = TRUE),
ethnicity   = dplyr::case_when(
ethnicity == 1 ~ "Asian",
ethnicity == 2 ~ "African American",
ethnicity == 3 ~ "Caucasian",
ethnicity == 4 ~ "Hispanic",
ethnicity == 5 ~ "Native American",
),
birth_day   = sample(1:28, dplyr::n(), replace = TRUE),
birth_month = sample(1:12, dplyr::n(), replace = TRUE),
dob         = as.Date(paste(birth_year, birth_month, birth_day, sep = "-")),
zip_code    = zip_code(n = dplyr::n(), k = dplyr::n())
)
View(dsq2)
dsq2 <-
ds_names_raw %>%
dplyr::mutate(
rown_o = 1:dplyr::n(),
) %>%
dplyr::filter(rown_o <= 100 ) %>%
dplyr::filter(!is.na(birth_year)) %>%
dplyr::group_by(rown_o) %>%
dplyr::mutate(
count_name_segments = length(strsplit(primary_name, " ")[[1]]),
name_first          =        strsplit(primary_name, " ")[[1]][1],
name_last           =        strsplit(primary_name, " ")[[1]][2],
) %>%
dplyr::ungroup() %>%
dplyr::filter(count_name_segments <= 2) %>%
dplyr::mutate(
name_middle = dplyr::lag(name_first, 1),
name_middle = dplyr::if_else(!is.na(name_middle), name_middle, dplyr::lead(name_first, 1)),
name_maiden = dplyr::lead(name_last, 1),
name_maiden = dplyr::if_else(!is.na(name_maiden), name_maiden, dplyr::lag(name_last, 1)),
gender      = sample(0:1, dplyr::n(), replace = TRUE),
gender      = dplyr::if_else(gender == 1, "Male", "Female"),
ethnicity   = sample(1:5, dplyr::n(), replace = TRUE),
ethnicity   = dplyr::case_when(
ethnicity == 1 ~ "Asian",
ethnicity == 2 ~ "African American",
ethnicity == 3 ~ "Caucasian",
ethnicity == 4 ~ "Hispanic",
ethnicity == 5 ~ "Native American",
),
birth_day   = sample(1:28, dplyr::n(), replace = TRUE),
birth_month = sample(1:12, dplyr::n(), replace = TRUE),
dob         = as.Date(paste(birth_year, birth_month, birth_day, sep = "-")),
zip_code    = zip_code(n = dplyr::n(), k = dplyr::n())
) %>%
fake_ssn_with_repeats_function() %>%
dplyr::distinct(ssn_fake, .keep_all = TRUE) %>%
# dplyr::select(
#   "rown_o",
#   "name_first",
#   "name_last",
#   "name_middle",
#   "name_maiden",
#   "gender",
#   "ethnicity",
#   "dob",
#   "ssn_fake"
# ) %>%
dplyr::mutate(
rown_o          = as.character(rown_o),
rown_o_w        = paste0("w",rown_o),
name_first_w    = name_first,
name_last_w     = name_last,
name_middle_w   = name_middle,
name_maiden_w   = name_maiden,
gender_w        = gender,
ethnicity_w     = ethnicity,
dob_w           = dob,
ssn_fake_w      = ssn_fake,
name_middle_missing = rbinom(n = dplyr::n(), size = 1, prob = 0.15),
name_maiden_missing = rbinom(n = dplyr::n(), size = 1, prob = 0.15),
name_middle_w = dplyr::if_else(name_middle_missing, NA_character_, name_middle_w),
name_maiden_w = dplyr::if_else(name_maiden_missing, NA_character_, name_maiden_w),
)
dsq2 <-
ds_names_raw %>%
dplyr::mutate(
rown_o = 1:dplyr::n(),
) %>%
dplyr::filter(rown_o <= 100 ) %>%
dplyr::filter(!is.na(birth_year)) %>%
dplyr::group_by(rown_o) %>%
dplyr::mutate(
count_name_segments = length(strsplit(primary_name, " ")[[1]]),
name_first          =        strsplit(primary_name, " ")[[1]][1],
name_last           =        strsplit(primary_name, " ")[[1]][2],
) %>%
dplyr::ungroup() %>%
dplyr::filter(count_name_segments <= 2) %>%
dplyr::mutate(
name_middle = dplyr::lag(name_first, 1),
name_middle = dplyr::if_else(!is.na(name_middle), name_middle, dplyr::lead(name_first, 1)),
name_maiden = dplyr::lead(name_last, 1),
name_maiden = dplyr::if_else(!is.na(name_maiden), name_maiden, dplyr::lag(name_last, 1)),
gender      = sample(0:1, dplyr::n(), replace = TRUE),
gender      = dplyr::if_else(gender == 1, "Male", "Female"),
ethnicity   = sample(1:5, dplyr::n(), replace = TRUE),
ethnicity   = dplyr::case_when(
ethnicity == 1 ~ "Asian",
ethnicity == 2 ~ "African American",
ethnicity == 3 ~ "Caucasian",
ethnicity == 4 ~ "Hispanic",
ethnicity == 5 ~ "Native American",
),
birth_day   = sample(1:28, dplyr::n(), replace = TRUE),
birth_month = sample(1:12, dplyr::n(), replace = TRUE),
dob         = as.Date(paste(birth_year, birth_month, birth_day, sep = "-")),
zip_code    = zip_code(n = dplyr::n(), k = dplyr::n())
) %>%
fake_ssn_with_repeats_function() %>%
dplyr::distinct(ssn_fake, .keep_all = TRUE) %>%
# dplyr::select(
#   "rown_o",
#   "name_first",
#   "name_last",
#   "name_middle",
#   "name_maiden",
#   "gender",
#   "ethnicity",
#   "dob",
#   "ssn_fake"
# ) %>%
dplyr::mutate(
rown_o          = as.character(rown_o),
rown_o_w        = paste0("w",rown_o),
name_first_w    = name_first,
name_last_w     = name_last,
name_middle_w   = name_middle,
name_maiden_w   = name_maiden,
gender_w        = gender,
ethnicity_w     = ethnicity,
dob_w           = dob,
ssn_fake_w      = ssn_fake,
name_middle_missing = as.logical(rbinom(n = dplyr::n(), size = 1, prob = 0.15)),
name_maiden_missing = as.logical(rbinom(n = dplyr::n(), size = 1, prob = 0.15)),
name_middle_w = dplyr::if_else(name_middle_missing, NA_character_, name_middle_w),
name_maiden_w = dplyr::if_else(name_maiden_missing, NA_character_, name_maiden_w)
)
View(dsq2)
dsq2 <-
ds_names_raw %>%
dplyr::mutate(
rown_o = 1:dplyr::n(),
) %>%
dplyr::filter(rown_o <= 100 ) %>%
dplyr::filter(!is.na(birth_year)) %>%
dplyr::group_by(rown_o) %>%
dplyr::mutate(
count_name_segments = length(strsplit(primary_name, " ")[[1]]),
name_first          =        strsplit(primary_name, " ")[[1]][1],
name_last           =        strsplit(primary_name, " ")[[1]][2],
) %>%
dplyr::ungroup() %>%
dplyr::filter(count_name_segments <= 2) %>%
dplyr::mutate(
name_middle = dplyr::lag(name_first, 1),
name_middle = dplyr::if_else(!is.na(name_middle), name_middle, dplyr::lead(name_first, 1)),
name_maiden = dplyr::lead(name_last, 1),
name_maiden = dplyr::if_else(!is.na(name_maiden), name_maiden, dplyr::lag(name_last, 1)),
gender      = sample(0:1, dplyr::n(), replace = TRUE),
gender      = dplyr::if_else(gender == 1, "Male", "Female"),
ethnicity   = sample(1:5, dplyr::n(), replace = TRUE),
ethnicity   = dplyr::case_when(
ethnicity == 1 ~ "Asian",
ethnicity == 2 ~ "African American",
ethnicity == 3 ~ "Caucasian",
ethnicity == 4 ~ "Hispanic",
ethnicity == 5 ~ "Native American",
),
birth_day   = sample(1:28, dplyr::n(), replace = TRUE),
birth_month = sample(1:12, dplyr::n(), replace = TRUE),
dob         = as.Date(paste(birth_year, birth_month, birth_day, sep = "-")),
zip_code    = zip_code(n = dplyr::n(), k = dplyr::n())
) %>%
fake_ssn_with_repeats_function() %>%
dplyr::distinct(ssn_fake, .keep_all = TRUE) %>%
dplyr::mutate(
rown_o          = as.character(rown_o),
rown_o_w        = paste0("w",rown_o),
name_first_w    = name_first,
name_last_w     = name_last,
name_middle_w   = name_middle,
name_maiden_w   = name_maiden,
gender_w        = gender,
ethnicity_w     = ethnicity,
dob_w           = dob,
ssn_fake_w      = ssn_fake,
name_middle_missing = as.logical(rbinom(n = dplyr::n(), size = 1, prob = 0.40)),
name_maiden_missing = as.logical(rbinom(n = dplyr::n(), size = 1, prob = 0.40)),
gender_missing      = as.logical(rbinom(n = dplyr::n(), size = 1, prob = 0.40)),
gender_swapped      = as.logical(rbinom(n = dplyr::n(), size = 1, prob = 0.20)),
name_middle_w = dplyr::if_else(name_middle_missing, NA_character_, name_middle_w),
name_maiden_w = dplyr::if_else(name_maiden_missing, NA_character_, name_maiden_w),
gender_w      = dplyr::if_else(gender_missing     , NA_character_, gender_w     ),
)
table(dsq2$gender)
dsq2 <-
ds_names_raw %>%
dplyr::mutate(
rown_o = 1:dplyr::n(),
) %>%
dplyr::filter(rown_o <= 100 ) %>%
dplyr::filter(!is.na(birth_year)) %>%
dplyr::group_by(rown_o) %>%
dplyr::mutate(
count_name_segments = length(strsplit(primary_name, " ")[[1]]),
name_first          =        strsplit(primary_name, " ")[[1]][1],
name_last           =        strsplit(primary_name, " ")[[1]][2],
) %>%
dplyr::ungroup() %>%
dplyr::filter(count_name_segments <= 2) %>%
dplyr::mutate(
name_middle = dplyr::lag(name_first, 1),
name_middle = dplyr::if_else(!is.na(name_middle), name_middle, dplyr::lead(name_first, 1)),
name_maiden = dplyr::lead(name_last, 1),
name_maiden = dplyr::if_else(!is.na(name_maiden), name_maiden, dplyr::lag(name_last, 1)),
gender      = sample(0:1, dplyr::n(), replace = TRUE),
gender      = dplyr::if_else(gender == 1, "Male", "Female"),
ethnicity   = sample(1:5, dplyr::n(), replace = TRUE),
ethnicity   = dplyr::case_when(
ethnicity == 1 ~ "Asian",
ethnicity == 2 ~ "African American",
ethnicity == 3 ~ "Caucasian",
ethnicity == 4 ~ "Hispanic",
ethnicity == 5 ~ "Native American",
),
birth_day   = sample(1:28, dplyr::n(), replace = TRUE),
birth_month = sample(1:12, dplyr::n(), replace = TRUE),
dob         = as.Date(paste(birth_year, birth_month, birth_day, sep = "-")),
zip_code    = zip_code(n = dplyr::n(), k = dplyr::n())
) %>%
fake_ssn_with_repeats_function() %>%
dplyr::distinct(ssn_fake, .keep_all = TRUE) %>%
dplyr::mutate(
rown_o          = as.character(rown_o),
rown_o_w        = paste0("w",rown_o),
name_first_w    = name_first,
name_last_w     = name_last,
name_middle_w   = name_middle,
name_maiden_w   = name_maiden,
gender_w        = gender,
ethnicity_w     = ethnicity,
dob_w           = dob,
ssn_fake_w      = ssn_fake,
name_middle_missing = as.logical(rbinom(n = dplyr::n(), size = 1, prob = 0.40)),
name_maiden_missing = as.logical(rbinom(n = dplyr::n(), size = 1, prob = 0.40)),
gender_missing      = as.logical(rbinom(n = dplyr::n(), size = 1, prob = 0.40)),
gender_swapped      = as.logical(rbinom(n = dplyr::n(), size = 1, prob = 0.20)),
name_middle_w = dplyr::if_else(name_middle_missing, NA_character_, name_middle_w),
name_maiden_w = dplyr::if_else(name_maiden_missing, NA_character_, name_maiden_w),
gender_w      = dplyr::case_when(
!gender_swapped ~ gender_w,
gender_swapped & gender_w == "Male"   ~ "Female",
gender_swapped & gender_w == "Female" ~ "Male",
),
gender_w      = dplyr::if_else(gender_missing     , NA_character_, gender_w     ),
)
View(dsq2)
